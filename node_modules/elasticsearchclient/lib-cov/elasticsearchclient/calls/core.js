// instrument by jscoverage, do not modifly this file
(function () {
  var BASE;
  if (typeof global === 'object') {
    BASE = global;
  } else if (typeof window === 'object') {
    BASE = window;
  } else {
    throw new Error('[jscoverage] unknow ENV!');
  }
  if (!BASE._$jscoverage) {
    BASE._$jscoverage = {};
    BASE._$jscoverage_cond = {};
    BASE._$jscoverage_done = function (file, line, express) {
      if (arguments.length === 2) {
        BASE._$jscoverage[file][line] ++;
      } else {
        BASE._$jscoverage_cond[file][line] ++;
        return express;
      }
    };
    BASE._$jscoverage_init = function (base, file, lines) {
      var tmp = [];
      for (var i = 0; i < lines.length; i ++) {
        tmp[lines[i]] = 0;
      }
      base[file] = tmp;
    };
  }
})();
_$jscoverage_init(_$jscoverage, "/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js",[2,5,6,7,8,10,11,12,15,16,17,20,21,24,25,27,31,32,33,34,35,38,39,42,45,46,47,48,49,52,53,55,60,61,62,65,66,68,69,71,72,76,80,81,83,84,85,87,88,92,93,98,99,100,101,102,104,105,107,108,112,113,114,117,119,120,122,125,126,127,128,129,131,132,135,136,137,139,142,143,144,145,146,148,149,151,154,155,156,157,158,160,161,163,166,167,169,171,172,173,175,177,180,184,185,186,187,188,190,191,193,196,197,199,203,204,205,206,207,209,210,212,215,216,217,218,219,221,222,224,227,228,229,231,232,233,234,236,237,239]);
_$jscoverage_init(_$jscoverage_cond, "/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js",[10,15,20,24,34,38,48,52,80,113,128,131,145,148,157,160,172,187,190,206,209,218,221,233,236]);
_$jscoverage["/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js"].source = ["//Core","var querystring = require('querystring'),","ElasticSearchClient = require('../elasticSearchClient')","","ElasticSearchClient.prototype.index = function(indexName, typeName, document, id, options, cb) {","    var path = '/' + indexName + '/' + typeName;","    var qs = '';","    var method = 'POST'","","    if(typeof id === 'object'){","        options = id;","        id = undefined;","    }","","    if (id) {","        path += \"/\" + id","        method = 'PUT'","    }","","    if (options) {","        qs = querystring.stringify(options)","    }","","    if (qs.length > 0) {","        path += \"?\" + qs;","    }","    return this.createCall({data:JSON.stringify(document),path:path,method: method}, this.clientOptions, cb);","}","","","ElasticSearchClient.prototype.deleteDocument = function(indexName, typeName, documentId, options, cb) {","    var path = '/' + indexName + '/' + typeName + '/' + documentId;","    var qs = '';","    if (options) {","        qs = querystring.stringify(options)","    }","","    if (qs.length > 0) {","        path += \"?\" + qs;","    }","","    return this.createCall({path:path, method:'DELETE'}, this.clientOptions, cb);","}","","ElasticSearchClient.prototype.get = function(indexName, typeName, documentId, options, cb) {","    var path = '/' + indexName + '/' + typeName + '/' + documentId;","    var qs = '';","    if (options) {","        qs = querystring.stringify(options)","    }","","    if (qs.length > 0) {","        path += \"?\" + qs;","    }","    return this.createCall({path:path, method:'GET'}, this.clientOptions, cb);","}","","//                                              indexName, typeName, queryObj, options","// TODO: Not a very robust piece of code - need to be refactored to be more tolerant to input","ElasticSearchClient.prototype.search = function(indexName, typeName, queryObj, options, cb) {","    var objArgs=[]","    var path=''","\t","\t// Assumes quite a lot about the input","    for(var i=0;i<arguments.length;i++){","        switch(typeof arguments[i]){","            case 'object':","                objArgs.push(arguments[i]);","            break;","            case 'string':","                path+='/'+arguments[i]","            break;","        }","    }","","\tpath+='/_search';","","\t// Is options sent as an object or a string","\t// Assumes that objArgs[0] is the queryObj","\tif (options !== undefined){","\t\tswitch(typeof options){","\t\t\tcase 'object':","\t\t\t\tobjArgs.push(options);","\t\t\t\tpath += \"?\" + querystring.stringify(objArgs[1]);","\t\t\t\tbreak;","\t\t\tcase 'string':","\t\t\t\tpath += \"?\" + options;","\t\t\t\tbreak;","\t\t}","\t}","\t","    var data = objArgs[0] || {};","    return this.createCall({path:path,method: 'POST',data:JSON.stringify(data)}, this.clientOptions, cb);","}","","//                                                queryObject, options","//                                                indexName, queryObject, options","ElasticSearchClient.prototype.multiget = function(indexName, typeName, documentArray, options, cb) {","    var objArgs = [];","    var path = '';","    for (var i=0; i<arguments.length; i++) {","        switch (typeof arguments[i]) {","            case 'object':","                objArgs.push(arguments[i]);","            break;","            case 'string':","                path += '/'+arguments[i];","            break;","        }","    }","","    path += '/_mget';","    if (objArgs[1]) {","       path += \"?\" + querystring.stringify(objArgs[1]);","    }","","    var data = {docs: []};","","    for (var i=0; i<objArgs[0].length; i++) {","        data.docs.push(objArgs[0][i]);","    }","    return this.createCall({path: path, method: 'GET', data: JSON.stringify(data)}, this.clientOptions, cb);","}","","ElasticSearchClient.prototype.multisearch = function(commandArray, options, cb) {","    var path = '/_msearch';","    var qs = '';","    if (options) {","        qs = querystring.stringify(options)","    }","    if (qs.length > 0) {","        path += \"?\" + qs;","    }","","    var commandBuffer=''","    for(var i =0; i<commandArray.length;i++){","        commandBuffer+=JSON.stringify(commandArray[i])+'\\n'","    }","    return this.createCall({path: path, method: 'POST',data:commandBuffer}, this.clientOptions, cb);","}","","ElasticSearchClient.prototype.percolator = function(indexName, typeName, queryObj, options, cb) {","    var path = '/_percolator/' + indexName + '/' + typeName;","    var qs = '';","    if (options) {","        qs = querystring.stringify(options)","    }","    if (qs.length > 0) {","        path += \"?\" + qs;","    }","    return this.createCall({path: path, method: 'PUT',data: JSON.stringify(queryObj)}, this.clientOptions, cb);","}","","ElasticSearchClient.prototype.percolate = function(indexName, typeName, doc, options, cb) {","    var path = '/' + indexName + '/' + typeName+'/_percolate'","    var qs = '';","    if (options) {","        qs = querystring.stringify(options)","    }","    if (qs.length > 0) {","        path += \"?\" + qs;","    }","    return this.createCall({path: path, method: 'GET',data: JSON.stringify(doc)}, this.clientOptions, cb);","}","","ElasticSearchClient.prototype.count = function(indexName, typeName, query, options, cb) {","    var path = '/' + indexName + '/' + typeName + '/_count';","    ","    switch(typeof query){","    case 'string':\t","\tvar qs = '?q=' + querystring.stringify(query);","\tif (options) {","            qs +='&'+ querystring.stringify(options)","\t}\t","\treturn this.createCall({path: path+qs, method: 'GET'}, this.clientOptions, cb);","    case 'object':","\treturn this.createCall({path : path, method : 'POST', data : JSON.stringify(query)}, this.clientOptions, cb);","    }","","    throw \"unsupported query type: \" + typeof(query); ","} ","","","ElasticSearchClient.prototype.bulk = function(commandArray, options, cb) {","    var path = '/_bulk'","    var qs = '';","    if (options) {","        qs = querystring.stringify(options)","    }","    if (qs.length > 0) {","        path += \"?\" + qs;","    }","    var commandBuffer=''","","","    for(var i =0; i<commandArray.length;i++){","        commandBuffer+=JSON.stringify(commandArray[i])+'\\n'","    }","    return this.createCall({path: path, method: 'POST',data:commandBuffer}, this.clientOptions, cb);","}","","","ElasticSearchClient.prototype.deleteByQuery = function(indexName, typeName, queryObj, options, cb) {","    var path = '/' + indexName + '/' + typeName + '/_query';","    var qs = '';","    if (options) {","        qs = querystring.stringify(options)","    }","    if (qs.length > 0) {","        path += \"?\" + qs;","    }","    return this.createCall({path: path, method: 'DELETE',data: JSON.stringify(queryObj)}, this.clientOptions, cb);","}","","ElasticSearchClient.prototype.moreLikeThis = function(indexName, typeName, documentId, options, cb) {","    var path = '/' + indexName + '/' + typeName + '/'+documentId+'/_mlt';","    var qs = '';","    if (options) {","        qs = querystring.stringify(options)","    }","    if (qs.length > 0) {","        path += \"?\" + qs;","    }","    return this.createCall({path: path, method: 'GET'}, this.clientOptions, cb);","}","","ElasticSearchClient.prototype.update = function(indexName, typeName, documentId, document, options, cb) {","    document = document || {};","    document = {\"doc\": document};","","    var path = '/' + indexName + '/' + typeName + '/'+documentId+'/_update';","    var qs = '';","    if (options) {","        qs = querystring.stringify(options)","    }","    if (qs.length > 0) {","        path += \"?\" + qs;","    }","    return this.createCall({data: JSON.stringify(document), path: path, method: 'POST'}, this.clientOptions, cb);","}"];
_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 2);
var querystring = require("querystring"), ElasticSearchClient = require("../elasticSearchClient");

_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 5);
ElasticSearchClient.prototype.index = function(indexName, typeName, document, id, options, cb) {
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 6);
    var path = "/" + indexName + "/" + typeName;
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 7);
    var qs = "";
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 8);
    var method = "POST";
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 10);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 10, typeof id === "object")) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 11);
        options = id;
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 12);
        id = undefined;
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 15);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 15, id)) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 16);
        path += "/" + id;
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 17);
        method = "PUT";
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 20);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 20, options)) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 21);
        qs = querystring.stringify(options);
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 24);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 24, qs.length > 0)) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 25);
        path += "?" + qs;
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 27);
    return this.createCall({
        data: JSON.stringify(document),
        path: path,
        method: method
    }, this.clientOptions, cb);
};

_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 31);
ElasticSearchClient.prototype.deleteDocument = function(indexName, typeName, documentId, options, cb) {
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 32);
    var path = "/" + indexName + "/" + typeName + "/" + documentId;
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 33);
    var qs = "";
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 34);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 34, options)) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 35);
        qs = querystring.stringify(options);
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 38);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 38, qs.length > 0)) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 39);
        path += "?" + qs;
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 42);
    return this.createCall({
        path: path,
        method: "DELETE"
    }, this.clientOptions, cb);
};

_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 45);
ElasticSearchClient.prototype.get = function(indexName, typeName, documentId, options, cb) {
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 46);
    var path = "/" + indexName + "/" + typeName + "/" + documentId;
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 47);
    var qs = "";
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 48);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 48, options)) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 49);
        qs = querystring.stringify(options);
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 52);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 52, qs.length > 0)) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 53);
        path += "?" + qs;
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 55);
    return this.createCall({
        path: path,
        method: "GET"
    }, this.clientOptions, cb);
};

_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 60);
ElasticSearchClient.prototype.search = function(indexName, typeName, queryObj, options, cb) {
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 61);
    var objArgs = [];
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 62);
    var path = "";
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 65);
    for (var i = 0; i < arguments.length; i++) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 66);
        switch (typeof arguments[i]) {
          case "object":
            _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 68);
            objArgs.push(arguments[i]);
            _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 69);
            break;
          case "string":
            _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 71);
            path += "/" + arguments[i];
            _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 72);
            break;
        }
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 76);
    path += "/_search";
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 80);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 80, options !== undefined)) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 81);
        switch (typeof options) {
          case "object":
            _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 83);
            objArgs.push(options);
            _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 84);
            path += "?" + querystring.stringify(objArgs[1]);
            _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 85);
            break;
          case "string":
            _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 87);
            path += "?" + options;
            _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 88);
            break;
        }
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 92);
    var data = objArgs[0] || {};
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 93);
    return this.createCall({
        path: path,
        method: "POST",
        data: JSON.stringify(data)
    }, this.clientOptions, cb);
};

_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 98);
ElasticSearchClient.prototype.multiget = function(indexName, typeName, documentArray, options, cb) {
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 99);
    var objArgs = [];
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 100);
    var path = "";
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 101);
    for (var i = 0; i < arguments.length; i++) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 102);
        switch (typeof arguments[i]) {
          case "object":
            _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 104);
            objArgs.push(arguments[i]);
            _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 105);
            break;
          case "string":
            _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 107);
            path += "/" + arguments[i];
            _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 108);
            break;
        }
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 112);
    path += "/_mget";
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 113);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 113, objArgs[1])) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 114);
        path += "?" + querystring.stringify(objArgs[1]);
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 117);
    var data = {
        docs: []
    };
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 119);
    for (var i = 0; i < objArgs[0].length; i++) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 120);
        data.docs.push(objArgs[0][i]);
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 122);
    return this.createCall({
        path: path,
        method: "GET",
        data: JSON.stringify(data)
    }, this.clientOptions, cb);
};

_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 125);
ElasticSearchClient.prototype.multisearch = function(commandArray, options, cb) {
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 126);
    var path = "/_msearch";
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 127);
    var qs = "";
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 128);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 128, options)) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 129);
        qs = querystring.stringify(options);
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 131);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 131, qs.length > 0)) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 132);
        path += "?" + qs;
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 135);
    var commandBuffer = "";
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 136);
    for (var i = 0; i < commandArray.length; i++) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 137);
        commandBuffer += JSON.stringify(commandArray[i]) + "\n";
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 139);
    return this.createCall({
        path: path,
        method: "POST",
        data: commandBuffer
    }, this.clientOptions, cb);
};

_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 142);
ElasticSearchClient.prototype.percolator = function(indexName, typeName, queryObj, options, cb) {
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 143);
    var path = "/_percolator/" + indexName + "/" + typeName;
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 144);
    var qs = "";
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 145);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 145, options)) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 146);
        qs = querystring.stringify(options);
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 148);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 148, qs.length > 0)) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 149);
        path += "?" + qs;
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 151);
    return this.createCall({
        path: path,
        method: "PUT",
        data: JSON.stringify(queryObj)
    }, this.clientOptions, cb);
};

_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 154);
ElasticSearchClient.prototype.percolate = function(indexName, typeName, doc, options, cb) {
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 155);
    var path = "/" + indexName + "/" + typeName + "/_percolate";
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 156);
    var qs = "";
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 157);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 157, options)) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 158);
        qs = querystring.stringify(options);
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 160);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 160, qs.length > 0)) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 161);
        path += "?" + qs;
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 163);
    return this.createCall({
        path: path,
        method: "GET",
        data: JSON.stringify(doc)
    }, this.clientOptions, cb);
};

_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 166);
ElasticSearchClient.prototype.count = function(indexName, typeName, query, options, cb) {
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 167);
    var path = "/" + indexName + "/" + typeName + "/_count";
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 169);
    switch (typeof query) {
      case "string":
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 171);
        var qs = "?q=" + querystring.stringify(query);
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 172);
        if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 172, options)) {
            _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 173);
            qs += "&" + querystring.stringify(options);
        }
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 175);
        return this.createCall({
            path: path + qs,
            method: "GET"
        }, this.clientOptions, cb);
      case "object":
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 177);
        return this.createCall({
            path: path,
            method: "POST",
            data: JSON.stringify(query)
        }, this.clientOptions, cb);
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 180);
    throw "unsupported query type: " + typeof query;
};

_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 184);
ElasticSearchClient.prototype.bulk = function(commandArray, options, cb) {
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 185);
    var path = "/_bulk";
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 186);
    var qs = "";
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 187);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 187, options)) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 188);
        qs = querystring.stringify(options);
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 190);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 190, qs.length > 0)) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 191);
        path += "?" + qs;
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 193);
    var commandBuffer = "";
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 196);
    for (var i = 0; i < commandArray.length; i++) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 197);
        commandBuffer += JSON.stringify(commandArray[i]) + "\n";
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 199);
    return this.createCall({
        path: path,
        method: "POST",
        data: commandBuffer
    }, this.clientOptions, cb);
};

_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 203);
ElasticSearchClient.prototype.deleteByQuery = function(indexName, typeName, queryObj, options, cb) {
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 204);
    var path = "/" + indexName + "/" + typeName + "/_query";
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 205);
    var qs = "";
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 206);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 206, options)) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 207);
        qs = querystring.stringify(options);
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 209);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 209, qs.length > 0)) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 210);
        path += "?" + qs;
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 212);
    return this.createCall({
        path: path,
        method: "DELETE",
        data: JSON.stringify(queryObj)
    }, this.clientOptions, cb);
};

_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 215);
ElasticSearchClient.prototype.moreLikeThis = function(indexName, typeName, documentId, options, cb) {
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 216);
    var path = "/" + indexName + "/" + typeName + "/" + documentId + "/_mlt";
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 217);
    var qs = "";
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 218);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 218, options)) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 219);
        qs = querystring.stringify(options);
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 221);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 221, qs.length > 0)) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 222);
        path += "?" + qs;
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 224);
    return this.createCall({
        path: path,
        method: "GET"
    }, this.clientOptions, cb);
};

_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 227);
ElasticSearchClient.prototype.update = function(indexName, typeName, documentId, document, options, cb) {
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 228);
    document = document || {};
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 229);
    document = {
        doc: document
    };
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 231);
    var path = "/" + indexName + "/" + typeName + "/" + documentId + "/_update";
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 232);
    var qs = "";
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 233);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 233, options)) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 234);
        qs = querystring.stringify(options);
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 236);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 236, qs.length > 0)) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 237);
        path += "?" + qs;
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/core.js", 239);
    return this.createCall({
        data: JSON.stringify(document),
        path: path,
        method: "POST"
    }, this.clientOptions, cb);
};