// instrument by jscoverage, do not modifly this file
(function () {
  var BASE;
  if (typeof global === 'object') {
    BASE = global;
  } else if (typeof window === 'object') {
    BASE = window;
  } else {
    throw new Error('[jscoverage] unknow ENV!');
  }
  if (!BASE._$jscoverage) {
    BASE._$jscoverage = {};
    BASE._$jscoverage_cond = {};
    BASE._$jscoverage_done = function (file, line, express) {
      if (arguments.length === 2) {
        BASE._$jscoverage[file][line] ++;
      } else {
        BASE._$jscoverage_cond[file][line] ++;
        return express;
      }
    };
    BASE._$jscoverage_init = function (base, file, lines) {
      var tmp = [];
      for (var i = 0; i < lines.length; i ++) {
        tmp[lines[i]] = 0;
      }
      base[file] = tmp;
    };
  }
})();
_$jscoverage_init(_$jscoverage, "/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js",[1,4,6,7,8,9,10,11,14,17,19,20,21,23,25,26,27,29,34,41,42,43,44,45,46,47,48,49,50,51,54,55,56,59,62,63,66]);
_$jscoverage_init(_$jscoverage_cond, "/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js",[19,25,50,55,62]);
_$jscoverage["/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js"].source = ["var querystring = require('querystring'),","    events = require('events'),","    http = require('http');","https = require('https');","","module.exports = ElasticSearchClient;","Core = require('./calls/core')","Cluster = require('./calls/cluster')","Indices = require('./calls/indices')","Twitter = require('./calls/twitter')","ElasticSearchCall = require('./calls/elasticSearchCall.js');","","function ElasticSearchClient(options) {","    this.clientOptions = options || {}","}","","ElasticSearchClient.prototype.createCall = function(params, options, cb) {","    //If options.hosts round robin the hosts","    if (options.hosts) {","        var nextHost = options.hosts.shift();","        options.hosts.push(nextHost);","    }else{","        nextHost=options;","    }","    if(typeof cb=='function'){","        call = new ElasticSearchCall(params, nextHost, cb);","        call.exec();","    }else{","        return new ElasticSearchCall(params, nextHost);","    }","","}","","var inetRE = /inet\\[\\/(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\:(\\d{1,5})\\]/","","/**"," * Discover nodes of the elasticsearch cluster."," * Call this function to automatically add all nodes of the "," * cluster in the hosts list."," */","ElasticSearchClient.prototype.discoverNodes = function(){","    var self = this;","    var query = this.nodesInfo();","    var hosts = [];","    query.on('data', function(data){","\tvar obj = JSON.parse(data);","\tvar nodes = obj.nodes;","\tfor(n in nodes){","\t    node = nodes[n];","\t    if(!\"http_address\" in node){","\t\tcontinue;","\t    }","\t    ","\t    address = inetRE.exec(node.http_address);","\t    if(!address){","\t\tcontinue;","\t    }","","\t    hosts.push({ host : address[1], port : address[2] });","\t}","","\tif(hosts.length > 0){","\t    self.clientOptions.hosts = hosts;","\t}","    });","    query.exec();","}"];
_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js", 1);
var querystring = require("querystring"), events = require("events"), http = require("http");

_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js", 4);
https = require("https");

_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js", 6);
module.exports = ElasticSearchClient;

_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js", 7);
Core = require("./calls/core");

_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js", 8);
Cluster = require("./calls/cluster");

_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js", 9);
Indices = require("./calls/indices");

_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js", 10);
Twitter = require("./calls/twitter");

_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js", 11);
ElasticSearchCall = require("./calls/elasticSearchCall.js");

function ElasticSearchClient(options) {
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js", 14);
    this.clientOptions = options || {};
}

_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js", 17);
ElasticSearchClient.prototype.createCall = function(params, options, cb) {
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js", 19);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js", 19, options.hosts)) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js", 20);
        var nextHost = options.hosts.shift();
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js", 21);
        options.hosts.push(nextHost);
    } else {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js", 23);
        nextHost = options;
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js", 25);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js", 25, typeof cb == "function")) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js", 26);
        call = new ElasticSearchCall(params, nextHost, cb);
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js", 27);
        call.exec();
    } else {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js", 29);
        return new ElasticSearchCall(params, nextHost);
    }
};

_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js", 34);
var inetRE = /inet\[\/(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\:(\d{1,5})\]/;

_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js", 41);
ElasticSearchClient.prototype.discoverNodes = function() {
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js", 42);
    var self = this;
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js", 43);
    var query = this.nodesInfo();
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js", 44);
    var hosts = [];
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js", 45);
    query.on("data", function(data) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js", 46);
        var obj = JSON.parse(data);
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js", 47);
        var nodes = obj.nodes;
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js", 48);
        for (n in nodes) {
            _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js", 49);
            node = nodes[n];
            _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js", 50);
            if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js", 50, !"http_address" in node)) {
                _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js", 51);
                continue;
            }
            _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js", 54);
            address = inetRE.exec(node.http_address);
            _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js", 55);
            if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js", 55, !address)) {
                _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js", 56);
                continue;
            }
            _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js", 59);
            hosts.push({
                host: address[1],
                port: address[2]
            });
        }
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js", 62);
        if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js", 62, hosts.length > 0)) {
            _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js", 63);
            self.clientOptions.hosts = hosts;
        }
    });
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/elasticSearchClient.js", 66);
    query.exec();
};