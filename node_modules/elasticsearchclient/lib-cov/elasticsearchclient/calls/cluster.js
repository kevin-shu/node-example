// instrument by jscoverage, do not modifly this file
(function () {
  var BASE;
  if (typeof global === 'object') {
    BASE = global;
  } else if (typeof window === 'object') {
    BASE = window;
  } else {
    throw new Error('[jscoverage] unknow ENV!');
  }
  if (!BASE._$jscoverage) {
    BASE._$jscoverage = {};
    BASE._$jscoverage_cond = {};
    BASE._$jscoverage_done = function (file, line, express) {
      if (arguments.length === 2) {
        BASE._$jscoverage[file][line] ++;
      } else {
        BASE._$jscoverage_cond[file][line] ++;
        return express;
      }
    };
    BASE._$jscoverage_init = function (base, file, lines) {
      var tmp = [];
      for (var i = 0; i < lines.length; i ++) {
        tmp[lines[i]] = 0;
      }
      base[file] = tmp;
    };
  }
})();
_$jscoverage_init(_$jscoverage, "/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js",[1,4,5,6,7,8,10,11,13,16,17,18,19,20,22,23,25,29,30,31,32,33,34,36,39,40,41,43,44,46,49,50,51,52,53,54,56,60,61,62,63,65,66,68,71,72,73,74,75,76,78,81,82,83,84,86,87,89]);
_$jscoverage_init(_$jscoverage_cond, "/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js",[7,10,19,22,31,33,40,43,51,53,62,65,73,75,83,86]);
_$jscoverage["/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js"].source = ["var querystring = require('querystring'),","ElasticSearchClient = require('../elasticSearchClient');","","ElasticSearchClient.prototype.health = function(options, cb) {","    var path = '/_cluster/health'","    var qs = '';","    if (options) {","        qs = querystring.stringify(options)","    }","    if (qs.length > 0) {","        path += \"?\" + qs;","    }","    return this.createCall({path: path, method: 'GET'}, this.clientOptions, cb);","}","","ElasticSearchClient.prototype.state = function(options, cb) {","    var path = '/_cluster/state'","    var qs = '';","    if (options) {","        qs = querystring.stringify(options)","    }","    if (qs.length > 0) {","        path += \"?\" + qs;","    }","    return this.createCall({path: path, method: 'GET'}, this.clientOptions, cb);","}","","","ElasticSearchClient.prototype.nodesInfo = function(nodes, options, cb) {","    var path = '/_cluster/nodes'","    if(nodes instanceof Array){","\tfor(n in nodes){","            if(n==0)","\t\tpath+='/'+nodes[n]","            else","\t\tpath+=','+nodes[n]","\t}","    }","    var qs = '';","    if (options) {","        qs = querystring.stringify(options)","    }","    if (qs.length > 0) {","        path += \"?\" + qs;","    }","    return this.createCall({path: path, method: 'GET'}, this.clientOptions, cb);","}","","ElasticSearchClient.prototype.nodesStats = function(nodes, options, cb) {","    var path = '/_cluster/nodes'","    if(nodes instanceof Array){","\tfor(n in nodes){","            if(n==0)","\t\tpath+='/'+nodes[n]","            else","\t\tpath+=','+nodes[n]","\t}","    }","    ","    path+='/stats'","    var qs = '';","    if (options) {","        qs = querystring.stringify(options)","    }","    if (qs.length > 0) {","        path += \"?\" + qs;","    }","    return this.createCall({path: path, method: 'GET'}, this.clientOptions, cb);","}","","ElasticSearchClient.prototype.nodesShutdown = function(nodes,options, cb) {","    var path = '/_cluster/nodes'","    if(nodes instanceof Array){","\tfor(n in nodes){","            if(n==0)","\t\tpath+='/'+nodes[n]","            else","\t\tpath+=','+nodes[n]","\t}","    }","    path+='/_shutdown'","    var qs = '';","    if (options) {","        qs = querystring.stringify(options)","    }","    if (qs.length > 0) {","        path += \"?\" + qs;","    }","    return this.createCall({path: path, method: 'POST'}, this.clientOptions, cb);","}",""];
_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 1);
var querystring = require("querystring"), ElasticSearchClient = require("../elasticSearchClient");

_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 4);
ElasticSearchClient.prototype.health = function(options, cb) {
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 5);
    var path = "/_cluster/health";
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 6);
    var qs = "";
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 7);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 7, options)) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 8);
        qs = querystring.stringify(options);
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 10);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 10, qs.length > 0)) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 11);
        path += "?" + qs;
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 13);
    return this.createCall({
        path: path,
        method: "GET"
    }, this.clientOptions, cb);
};

_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 16);
ElasticSearchClient.prototype.state = function(options, cb) {
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 17);
    var path = "/_cluster/state";
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 18);
    var qs = "";
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 19);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 19, options)) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 20);
        qs = querystring.stringify(options);
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 22);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 22, qs.length > 0)) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 23);
        path += "?" + qs;
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 25);
    return this.createCall({
        path: path,
        method: "GET"
    }, this.clientOptions, cb);
};

_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 29);
ElasticSearchClient.prototype.nodesInfo = function(nodes, options, cb) {
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 30);
    var path = "/_cluster/nodes";
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 31);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 31, nodes instanceof Array)) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 32);
        for (n in nodes) {
            _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 33);
            if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 33, n == 0)) {
                _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 34);
                path += "/" + nodes[n];
            } else {
                _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 36);
                path += "," + nodes[n];
            }
        }
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 39);
    var qs = "";
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 40);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 40, options)) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 41);
        qs = querystring.stringify(options);
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 43);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 43, qs.length > 0)) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 44);
        path += "?" + qs;
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 46);
    return this.createCall({
        path: path,
        method: "GET"
    }, this.clientOptions, cb);
};

_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 49);
ElasticSearchClient.prototype.nodesStats = function(nodes, options, cb) {
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 50);
    var path = "/_cluster/nodes";
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 51);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 51, nodes instanceof Array)) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 52);
        for (n in nodes) {
            _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 53);
            if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 53, n == 0)) {
                _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 54);
                path += "/" + nodes[n];
            } else {
                _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 56);
                path += "," + nodes[n];
            }
        }
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 60);
    path += "/stats";
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 61);
    var qs = "";
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 62);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 62, options)) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 63);
        qs = querystring.stringify(options);
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 65);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 65, qs.length > 0)) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 66);
        path += "?" + qs;
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 68);
    return this.createCall({
        path: path,
        method: "GET"
    }, this.clientOptions, cb);
};

_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 71);
ElasticSearchClient.prototype.nodesShutdown = function(nodes, options, cb) {
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 72);
    var path = "/_cluster/nodes";
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 73);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 73, nodes instanceof Array)) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 74);
        for (n in nodes) {
            _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 75);
            if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 75, n == 0)) {
                _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 76);
                path += "/" + nodes[n];
            } else {
                _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 78);
                path += "," + nodes[n];
            }
        }
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 81);
    path += "/_shutdown";
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 82);
    var qs = "";
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 83);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 83, options)) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 84);
        qs = querystring.stringify(options);
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 86);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 86, qs.length > 0)) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 87);
        path += "?" + qs;
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/cluster.js", 89);
    return this.createCall({
        path: path,
        method: "POST"
    }, this.clientOptions, cb);
};