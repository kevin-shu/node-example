// instrument by jscoverage, do not modifly this file
(function () {
  var BASE;
  if (typeof global === 'object') {
    BASE = global;
  } else if (typeof window === 'object') {
    BASE = window;
  } else {
    throw new Error('[jscoverage] unknow ENV!');
  }
  if (!BASE._$jscoverage) {
    BASE._$jscoverage = {};
    BASE._$jscoverage_cond = {};
    BASE._$jscoverage_done = function (file, line, express) {
      if (arguments.length === 2) {
        BASE._$jscoverage[file][line] ++;
      } else {
        BASE._$jscoverage_cond[file][line] ++;
        return express;
      }
    };
    BASE._$jscoverage_init = function (base, file, lines) {
      var tmp = [];
      for (var i = 0; i < lines.length; i ++) {
        tmp[lines[i]] = 0;
      }
      base[file] = tmp;
    };
  }
})();
_$jscoverage_init(_$jscoverage, "/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js",[1,7,9,10,11,12,13,14,15,16,17,18,21,23,24,25,31,32,35,36,37,39,42,43,44,47,48,49,50,52,53,54,56,57,60,61,62,64,69,70,73,74,75,77,78,79,81,89,90,97,98,105,106]);
_$jscoverage_init(_$jscoverage_cond, "/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js",[31,36,53,61,69,73,74]);
_$jscoverage["/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js"].source = ["var events = require('events'),","http = require('http'),","https = require('https'),","util = require('util');","","","module.exports = ElasticSearchCall;","function ElasticSearchCall(params, options, cb) {","    var self = this","    self.host = options.host || 'localhost';","    self.port = options.port || 80;","    self.secure = options.secure || false;","    self.defaultMethod = options.defaultMethod || 'GET';","    self.auth = options.auth || false;","    self.params = params || {};","    self.path = [ options.pathPrefix || '', options.path || ''].join('');","    self.callback=cb||false;","    events.EventEmitter.call(this);","}","","util.inherits(ElasticSearchCall, events.EventEmitter);","","ElasticSearchCall.prototype.exec = function(cb) {","    var self = this","    var reqOptions = {","        path:this.path + this.params.path,","        method:this.params.method || this.defaultMethod,","        host:this.host,","        port:this.port","    }","    if(typeof cb=='function'){","        self.callback=cb;","    }","","    var client = null;","    if (this.secure) {","        client = https;","    } else {","        client = http;","    }","","    var request = client.request(reqOptions);","    request.on('error',function(error){","        self.emit(\"error\", error)","    })","","    request.on('response', function(response) {","        var body = \"\";","        response.on('data', function(chunk) {","            body += chunk;","        });","        response.on('end', function() {","            if(typeof self.callback=='function'){","                self.callback(undefined, body);","            }else{","                self.emit(\"data\", body);","                self.emit(\"done\", 0)","            }","        });","        response.on('error', function(error) {","            if(typeof self.callback=='function'){","                self.callback(error);","            }else{","                self.emit(\"error\", error)","            }","        })","    });","","    if (this.auth) {","        request.setHeader(\"Authorization\", \"Basic \" + new Buffer(this.auth.username + \":\" + this.auth.password).toString('base64'))","    }","","    if (this.params.data) {","        if (typeof this.params.data != 'string') {","            this.params.data = JSON.stringify(this.params.data);","        }","        request.setHeader('Content-Type', 'application/json');","        request.setHeader('Content-Length', Buffer.byteLength(this.params.data, 'utf8'));","        request.end(this.params.data);","    } else {","        request.end('');","    }","}","","/**"," * Wrap the default data event"," * @param callback"," */","ElasticSearchCall.prototype.data = function(callback) {","    this.on('data', callback);","}","","/**"," * wrap the default done event"," * @param callback"," */","ElasticSearchCall.prototype.done = function(callback) {","    this.on('done', callback);","}","","/**"," * wrap the default error event"," * @param callback"," */","ElasticSearchCall.prototype.error = function(callback) {","    this.on('error', callback);","}",""];
_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 1);
var events = require("events"), http = require("http"), https = require("https"), util = require("util");

_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 7);
module.exports = ElasticSearchCall;

function ElasticSearchCall(params, options, cb) {
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 9);
    var self = this;
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 10);
    self.host = options.host || "localhost";
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 11);
    self.port = options.port || 80;
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 12);
    self.secure = options.secure || false;
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 13);
    self.defaultMethod = options.defaultMethod || "GET";
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 14);
    self.auth = options.auth || false;
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 15);
    self.params = params || {};
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 16);
    self.path = [ options.pathPrefix || "", options.path || "" ].join("");
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 17);
    self.callback = cb || false;
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 18);
    events.EventEmitter.call(this);
}

_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 21);
util.inherits(ElasticSearchCall, events.EventEmitter);

_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 23);
ElasticSearchCall.prototype.exec = function(cb) {
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 24);
    var self = this;
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 25);
    var reqOptions = {
        path: this.path + this.params.path,
        method: this.params.method || this.defaultMethod,
        host: this.host,
        port: this.port
    };
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 31);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 31, typeof cb == "function")) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 32);
        self.callback = cb;
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 35);
    var client = null;
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 36);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 36, this.secure)) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 37);
        client = https;
    } else {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 39);
        client = http;
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 42);
    var request = client.request(reqOptions);
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 43);
    request.on("error", function(error) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 44);
        self.emit("error", error);
    });
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 47);
    request.on("response", function(response) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 48);
        var body = "";
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 49);
        response.on("data", function(chunk) {
            _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 50);
            body += chunk;
        });
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 52);
        response.on("end", function() {
            _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 53);
            if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 53, typeof self.callback == "function")) {
                _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 54);
                self.callback(undefined, body);
            } else {
                _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 56);
                self.emit("data", body);
                _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 57);
                self.emit("done", 0);
            }
        });
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 60);
        response.on("error", function(error) {
            _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 61);
            if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 61, typeof self.callback == "function")) {
                _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 62);
                self.callback(error);
            } else {
                _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 64);
                self.emit("error", error);
            }
        });
    });
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 69);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 69, this.auth)) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 70);
        request.setHeader("Authorization", "Basic " + (new Buffer(this.auth.username + ":" + this.auth.password)).toString("base64"));
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 73);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 73, this.params.data)) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 74);
        if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 74, typeof this.params.data != "string")) {
            _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 75);
            this.params.data = JSON.stringify(this.params.data);
        }
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 77);
        request.setHeader("Content-Type", "application/json");
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 78);
        request.setHeader("Content-Length", Buffer.byteLength(this.params.data, "utf8"));
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 79);
        request.end(this.params.data);
    } else {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 81);
        request.end("");
    }
};

_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 89);
ElasticSearchCall.prototype.data = function(callback) {
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 90);
    this.on("data", callback);
};

_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 97);
ElasticSearchCall.prototype.done = function(callback) {
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 98);
    this.on("done", callback);
};

_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 105);
ElasticSearchCall.prototype.error = function(callback) {
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/elasticSearchCall.js", 106);
    this.on("error", callback);
};