// instrument by jscoverage, do not modifly this file
(function () {
  var BASE;
  if (typeof global === 'object') {
    BASE = global;
  } else if (typeof window === 'object') {
    BASE = window;
  } else {
    throw new Error('[jscoverage] unknow ENV!');
  }
  if (!BASE._$jscoverage) {
    BASE._$jscoverage = {};
    BASE._$jscoverage_cond = {};
    BASE._$jscoverage_done = function (file, line, express) {
      if (arguments.length === 2) {
        BASE._$jscoverage[file][line] ++;
      } else {
        BASE._$jscoverage_cond[file][line] ++;
        return express;
      }
    };
    BASE._$jscoverage_init = function (base, file, lines) {
      var tmp = [];
      for (var i = 0; i < lines.length; i ++) {
        tmp[lines[i]] = 0;
      }
      base[file] = tmp;
    };
  }
})();
_$jscoverage_init(_$jscoverage, "/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/twitter.js",[1,4,5,6,7,8,10,11,13,16,18,19,20,21,23,24,26]);
_$jscoverage_init(_$jscoverage_cond, "/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/twitter.js",[7,10,20,23]);
_$jscoverage["/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/twitter.js"].source = ["var querystring = require('querystring'),","ElasticSearchClient = require('../elasticSearchClient');","","ElasticSearchClient.prototype.deleteTwitterRiver = function(riverName, options, cb) {","    var path = '/_river/'+riverName+'/_meta';","    var qs = '';","    if (options) {","        qs = querystring.stringify(options)","    }","    if (qs.length > 0) {","        path += \"?\" + qs;","    }","    return this.createCall({path:path, method:'DELETE'}, this.clientOptions,cb);","}","","ElasticSearchClient.prototype.createOrModifyTwitterRiver = function(riverName, riverData, options, cb) {","","    var path = '/_river/'+riverName+'/_meta';","    var qs = '';","    if (options) {","        qs = querystring.stringify(options)","    }","    if (qs.length > 0) {","        path += \"?\" + qs;","    }","    return this.createCall({data:JSON.stringify(riverData),path:path,method: 'PUT'}, this.clientOptions, cb);","}"];
_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/twitter.js", 1);
var querystring = require("querystring"), ElasticSearchClient = require("../elasticSearchClient");

_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/twitter.js", 4);
ElasticSearchClient.prototype.deleteTwitterRiver = function(riverName, options, cb) {
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/twitter.js", 5);
    var path = "/_river/" + riverName + "/_meta";
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/twitter.js", 6);
    var qs = "";
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/twitter.js", 7);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/twitter.js", 7, options)) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/twitter.js", 8);
        qs = querystring.stringify(options);
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/twitter.js", 10);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/twitter.js", 10, qs.length > 0)) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/twitter.js", 11);
        path += "?" + qs;
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/twitter.js", 13);
    return this.createCall({
        path: path,
        method: "DELETE"
    }, this.clientOptions, cb);
};

_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/twitter.js", 16);
ElasticSearchClient.prototype.createOrModifyTwitterRiver = function(riverName, riverData, options, cb) {
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/twitter.js", 18);
    var path = "/_river/" + riverName + "/_meta";
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/twitter.js", 19);
    var qs = "";
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/twitter.js", 20);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/twitter.js", 20, options)) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/twitter.js", 21);
        qs = querystring.stringify(options);
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/twitter.js", 23);
    if (_$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/twitter.js", 23, qs.length > 0)) {
        _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/twitter.js", 24);
        path += "?" + qs;
    }
    _$jscoverage_done("/Users/philliprosen/Documents/dev/node-elasticsearch-client/lib/elasticsearchclient/calls/twitter.js", 26);
    return this.createCall({
        data: JSON.stringify(riverData),
        path: path,
        method: "PUT"
    }, this.clientOptions, cb);
};